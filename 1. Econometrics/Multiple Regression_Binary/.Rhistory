salary.ros
salary.ros <- 0.0002*50*100
salary.ros
critical.value <- qt(0.90, df = 205)
t.value <- (0.0002417-0)/0.0005418
cat("\nCritical value :", critical.value,"> T value :", t.value,"\n")
cat("DF = 205, Significance level: 10%")
summary(model1)
critical.value <- qt(0.90, df = 205)
t.value <- (0.0002-0)/0.001
cat("\nCritical value :", critical.value,"> T value :", t.value,"\n")
cat("DF = 205, Significance level: 10%")
critical.value <- qt(0.90, df = 205)
t.value <- (0.0002-0)/0.001
cat("Critical value :", critical.value,"> T value :", t.value,"\n")
cat("DF = 205, Significance level: 10%")
critical.value <- round(qt(0.90, df = 205),3)
t.value <- (0.0002-0)/0.001
cat("Critical value :", critical.value,"> T value :", t.value,"\n")
cat("DF = 205, Significance level: 10%")
load('lawsch85.RData')
summary(data)
law <- data
desc
summary(model2)
summary(model2)
model2 <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, law)
stargazer(model2, title = "part 2 regression model", header = FALSE, type = 'latex', no.space = TRUE))
stargazer(model2, title = "part 2 regression model", header = FALSE, type = 'latex', no.space = TRUE)
model2 <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, law)
stargazer(model2, title = "part 2 regression model", header = FALSE, type = 'latex', no.space = TRUE)
critical.value <- -qt(0.975, df = (130))
t.value <- (-0.0033246-0)/0.0003485
cat("\nCritical value :", critical.value,"> T value :", t.value,"\n")
cat("DF = 150, Significance level: 5%")
summary(model2)
model2 <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, law)
stargazer(model2, title = "part 2 regression model", header = FALSE, type = 'latex', no.space = TRUE)
critical.value <- -qt(0.975, df = (130))
t.value <- (-0.0033246-0)/0.0003485
cat("\nCritical value :", critical.value,"> T value :", t.value,"\n")
cat("DF = 130, Significance level: 5%")
critical.value <- -qt(0.975, df = (130))
t.value <- (-0.003-0)/0.0003
t.value <- (-0.003-0)/0.0003
t.value
critical.value <- -qt(0.975, df = (130))
critical.value
critical.value <- roun(-qt(0.975, df = (130)),3)
critical.value <- round(-qt(0.975, df = (130)),3)
critical.value
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
summary(model2_ur)
ur_RSS <- sum(model2_ur$residuals^2)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
summary(model2_r)
r_RSS <- sum(model2_r$residuals^2)
f.value <- ((r_RSS-ur_RSS)/2)/((ur_RSS)/(136-6))
critical.value <- qf(df1 = 2, df2 = 130, 0.95)
linearHypothesis(model2_ur, c("LSAT = 0", "GPA = 0"))
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
r_SSR <- sum(model2_r$residuals^2)
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
summary(model2_ur)
ur_SSR <- sum(model2_ur$residuals^2)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
summary(model2_r)
r_SSR <- sum(model2_r$residuals^2)
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
critical.value <- qf(df1 = 2, df2 = 130, 0.95)
linearHypothesis(model2_ur, c("LSAT = 0", "GPA = 0"))
summary
summary(model2_ru)
summary(model2_ur)
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
f.value
linearHypothesis(model2_ur, c("LSAT = 0", "GPA = 0"))
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
summary(model2_ur)
ur_SSR <- sum(model2_ur$residuals^2)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
summary(model2_r)
r_SSR <- sum(model2_r$residuals^2)
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
critical.value <- qf(df1 = 2, df2 = 130, 0.95)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nCritical value :", critical.value,"> F value :", f.value,"\n")
cat("DF = 130, Significance level: 5%")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- sum(model2_ur$residuals^2)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- sum(model2_r$residuals^2)
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
critical.value <- qf(df1 = 2, df2 = 130, 0.95)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nCritical value :", critical.value,"< F value :", f.value)
cat("\nDF = 130, Significance level: 5%\n")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- sum(model2_ur$residuals^2)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- sum(model2_r$residuals^2)
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
critical.value <- qf(df1 = 2, df2 = 130, 0.95)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nUnrestricted_SSR :", ur_SSR,"Restricted_SSR :", r_SSR)
cat("\nCritical value :", critical.value,"< F value :", f.value)
cat("\nDF = 130, Significance level: 5%\n")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- round(sum(model2_ur$residuals^2),3)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- round(sum(model2_r$residuals^2),3)
f.value <- ((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6))
critical.value <- qf(df1 = 2, df2 = 130, 0.95)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\n Unrestricted_SSR :", ur_SSR,"Restricted_SSR : \n", r_SSR)
cat("\n Critical value :", critical.value,"< F value : \n", f.value)
cat("\n DF = 130, Significance level: 5% \n")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- round(sum(model2_ur$residuals^2),3)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- round(sum(model2_r$residuals^2),3)
f.value <- round(((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6)),3)
critical.value <- round(qf(df1 = 2, df2 = 130, 0.95),3)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\n Unrestricted_SSR :", ur_SSR,"Restricted_SSR : \n", r_SSR)
cat("\n Critical value :", critical.value,"< F value : \n", f.value)
cat("\n DF = 130, Significance level: 5% \n")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- round(sum(model2_ur$residuals^2),3)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- round(sum(model2_r$residuals^2),3)
f.value <- round(((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6)),3)
critical.value <- round(qf(df1 = 2, df2 = 130, 0.95),3)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("Unrestricted_SSR :", ur_SSR,"Restricted_SSR : ", r_SSR, " \n")
cat("Critical value :", critical.value,"< F value : ", f.value, " \n")
cat("\n DF = 130, Significance level: 5%", " \n")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- round(sum(model2_ur$residuals^2),3)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- round(sum(model2_r$residuals^2),3)
f.value <- round(((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6)),3)
critical.value <- round(qf(df1 = 2, df2 = 130, 0.95),3)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\n Unrestricted_SSR :", ur_SSR,"Restricted_SSR : ", r_SSR, " \n")
cat("Critical value :", critical.value,"< F value : ", f.value, " \n")
cat("DF = 130, Significance level: 5%", " \n")
law2 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost, clsize, faculty)
new.law2 <- na.omit(law2)
model3_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank + clsize + faculty, new.law2)
summary(model3_ur)
ur_ssr <- round(sum(model3_ur$residuals^2),3)
model3_r <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law2)
summary(model3_r)
r_ssr <- round(sum(model3_r$residuals^2),3)
f.value.add <- round(((r_rss - ur_rss)/2)/((ur_rss)/(131-8)),3)
law2 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost, clsize, faculty)
new.law2 <- na.omit(law2)
model3_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank + clsize + faculty, new.law2)
summary(model3_ur)
ur_ssr <- round(sum(model3_ur$residuals^2),3)
model3_r <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law2)
summary(model3_r)
r_ssr <- round(sum(model3_r$residuals^2),3)
f.value.add <- round(((r_ssr - ur_ssr)/2)/((ur_ssr)/(131-8)),3)
critical.value.add <- round(qf(df1 = 2, df2 = 123, 0.95),3)
stargazer(model3_ur, model3_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nUnrestricted_SSR :", ur_SSR,"Restricted_SSR : ", r_SSR, " \n")
cat("Critical value :", critical.value,"< F value : ", f.value, " \n")
cat("DF = 130, Significance level: 5%", " \n\n")
law2 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost, clsize, faculty)
new.law2 <- na.omit(law2)
model3_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank + clsize + faculty, new.law2)
ur_ssr <- round(sum(model3_ur$residuals^2),3)
model3_r <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law2)
r_ssr <- round(sum(model3_r$residuals^2),3)
f.value.add <- round(((r_ssr - ur_ssr)/2)/((ur_ssr)/(131-8)),3)
critical.value.add <- round(qf(df1 = 2, df2 = 123, 0.95),3)
stargazer(model3_ur, model3_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nUnrestricted_SSR :", ur_SSR,"Restricted_SSR : ", r_SSR, " \n")
cat("Critical value :", critical.value,"< F value : ", f.value, " \n")
cat("DF = 123, Significance level: 5%", " \n\n")
model2 <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, law)
stargazer(model2, title = "part 2 regression model", header = FALSE, type = 'latex', no.space = TRUE)
critical.value <- round(-qt(0.975, df = (130)),3)
t.value <- (-0.003-0)/0.0003
cat("\n Critical value :", critical.value,"> T value :", t.value, " \n")
cat("DF = 130, Significance level: 5%")
model1 <- lm(log(salary) ~ log(sales) + roe + ros, data = ceo)
stargazer(model1, title = "part 1 regression model", header = FALSE, type = 'latex', no.space = TRUE)
salary.ros <- 0.0002*50*100
cat("Percentage of the salary increase:", salary.ros,"%"," \n")
model2 <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, law)
stargazer(model2, title = "part 2 regression model", header = FALSE, type = 'latex', no.space = TRUE)
critical.value <- round(-qt(0.975, df = (130)),3)
t.value <- (-0.003-0)/0.0003
cat("\n Critical value :", critical.value,"> T value :", t.value, " \n")
cat("DF = 130, Significance level: 5%")
law1 <- law %>% select(salary, rank, LSAT, GPA, libvol, cost)
new.law1 <- na.omit(law1)
model2_ur <- lm(log(salary) ~ LSAT + GPA + log(libvol) + log(cost) + rank, new.law1)
ur_SSR <- round(sum(model2_ur$residuals^2),3)
model2_r <- lm(log(salary) ~ log(libvol) + log(cost) + rank, new.law1)
r_SSR <- round(sum(model2_r$residuals^2),3)
f.value <- round(((r_SSR-ur_SSR)/2)/((ur_SSR)/(136-6)),3)
critical.value <- round(qf(df1 = 2, df2 = 130, 0.95),3)
stargazer(model2_ur, model2_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nUnrestricted_SSR :", ur_SSR,", Restricted_SSR : ", r_SSR, " \n")
cat("Critical value :", critical.value,"< F value : ", f.value, " \n")
cat("DF = 130, Significance level: 5%", " \n\n")
criti.value <- qt(130, 0.975)
LSAT.t.value <- round(0.005/0.004)
GPA.t.value <- round(0.248/0.090)
criti.value <- qt(130, 0.975)
LSAT.t.value
GPA.t.value
criti.value
criti.value <- qt(df = 130, 0.975)
criti.value
LSAT.t.value <- round(0.005/0.004, 3)
GPA.t.value <- round(0.248/0.090, 3)
criti.value <- round(qt(df = 130, 0.975),3)
SAT.t.value
LSAT.t.value
GPA.t.value
criti.value
LSAT.t.value <- 0.005/0.004
GPA.t.value <- 0.248/0.090
criti.value <- round(qt(df = 130, 0.975),3)
LSAT.t.value
GPA.t.value
stargazer(model3_ur, model3_r, title = "Jointly significant test", header = FALSE, type = 'latex', no.space = TRUE)
cat("\nUnrestricted_SSR :", ur_SSR,"Restricted_SSR : ", r_SSR, " \n")
cat("Critical value :", critical.value,"< F value : ", f.value, " \n")
cat("DF = 123, Significance level: 5%", " \n")
library(RPostgreSQL)
password <- .rs.askForPassword("Your database password.")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "Nutrition",
host = "localhost", port = 5432,
user = "postgres", password = password)
remove(password)
library(RPostgreSQL)
password <- .rs.askForPassword("Your database password.")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres",
host = "localhost", port = 5432,
user = "postgres", password = password)
remove(password)
install.packages("RPostgreSQL")
install.packages("knitr")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
library(RPostgreSQL)
password <- .rs.askForPassword("Your database password.")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres",
host = "localhost", port = 5432,
user = "postgres", password = password)
remove(password)
library(RPostgreSQL)
password <- .rs.askForPassword("Your database password.")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "Nutrition",
host = "localhost", port = 5432,
user = "postgres", password = password)
remove(password)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(chemCal)
library(stargazer)
library(xtable)
library(DT)
library(car)
library(dplyr)
library(sandwich)
library(lmtest)
load("~/2ndSemster/Econometrics/problemsets/PS3/bwght2.RData")
bwg <- data
model2 <- lm(log(bwght) ~ npvis + npvissq, bwg)
stargazer(model2, title = "Regression Model 1", header = FALSE, type = "html", no.space = TRUE)
print(round(0.0189/(0.00043*2)))
bwg %>% filter(npvis >= 22) %>% summarise(number = n())
model3 <- lm(log(bwght) ~ npvis + npvissq + mage + magesq, data = bwg)
stargazer(model3, title = "Regression Model 2", header = FALSE, type = "html", no.space = TRUE)
print(round(0.025/(2 * 0.0004)))
bwg %>% filter(mage > 31) %>% summarise(number = n())
load("~/2ndSemster/Econometrics/problemsets/PS3/bwght2.RData")
desc
desc
summary(data)
summary(data)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(chemCal)
library(stargazer)
library(xtable)
library(DT)
library(car)
library(dplyr)
library(sandwich)
library(lmtest)
print(round(0.025/(2 * 0.0004)))
print(round(0.025/(2 * 0.0004)))
bwg %>% filter(mage > 30.8) %>% summarise(number = n())
print(round(0.025/(2 * 0.0004),1))
bwg %>% filter(mage > 30.8) %>% summarise(number = n())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(chemCal)
library(stargazer)
library(xtable)
library(DT)
library(car)
library(dplyr)
library(sandwich)
library(lmtest)
model3 <- lm(log(bwght) ~ npvis + npvissq + mage + magesq, data = bwg)
stargazer(model3, title = "Regression Model 2", header = FALSE, type = "html", no.space = TRUE)
print(round(0.025/(2 * 0.0004)))
bwg %>% filter(mage > 31) %>% summarise(number = n())
print(0.025/(2 * 0.0004))
bwg %>% filter(mage > 31) %>% summarise(number = n())
print(0.0189/(0.00043*2)) # calculation by the first derivative
bwg %>% filter(npvis >= 22) %>% summarise(number = n())
print(0.0189/(0.00043*2)) # calculation by the first derivative
bwg %>% filter(npvis >= 21.97674) %>% summarise(number = n())
print(0.025/(2 * 0.0004))
bwg %>% filter(mage > 31.25) %>% summarise(number = n())
load("~/2ndSemster/Econometrics/lec6/bwght.RData")
install.packages("leaps")
library(leaps)
data.new <- na.omit(data)
bwght.model.search <- regsubsets(bwght ~ faminc + fatheduc + motheduc + parity
+ male + white + cigs, data.new, nbest = 3)
bwght.model.search
bwght.model.search <- regsubsets(bwght ~ faminc + fatheduc + motheduc + parity
+ male + white + cigs, data.new, nbest = 3) #모든조합, nbset = 3 of best performance model with 1 variable, 2 variable, 3 variables
summary(bwght.model/search)
summary(bwght.model.search)
summary(bwght.model.search)
plot(bwght.model.search, scale = "adjr2") #adjusted r square
plot(bwght.model.search, scale = "bic")
plot(bwght.model.search, scale = "bic")#y축은 bic임, each one is rank, lower is better, therefore top one is best, which is moth+party+male+white+cigs임
# stepwise search
bwght.null <- lm(bwght ~ 1, data.new) #only include intercept
bwght.full <- lm(bwght ~ faminc + fatheduc + motheduc + parity + male + white
+ cigs, data.new)#include all var
step(bwght.null, scope = list(lower = bwght.null, upper = bwght.full),
direction = "forward")#
n <- nrow(data.new)
step(bwght.null, scope = list(lower = bwght.null, upper = bwght.full),
direction = "forward", k = log(n))
step(bwght.null, scope = list(lower = bwght.null, upper = bwght.full),
direction = "forward")# bwght ~ 1에서 what if we add var not in the model, -> if add cigs, then AIC 7122 / if add only male,
step(bwght.full, data.new, direction = "backward")
step(bwght.full, data.new, direction = "backward") #start with full vari
step(bwght.null, scope = list(lower = bwght.null, upper = bwght.full),
direction = "forward")# bwght ~ 1에서 what if we add var not in the model, -> if add cigs, then AIC 7122 / if add only male,
step(bwght.null, scope = list(lower = bwght.null, upper = bwght.full),
direction = "both") # add a new one which not in the model, and remove the var which already in the model
load("~/2ndSemster/Econometrics/lec6/wage1.RData")
wage.m1 <- lm(wage ~ educ + exper, data)
newdata <- data.frame(educ = 12, exper = 8)
predict(wage.m1, newdata, interval = "confidence", level = 0.95)
predict(wage.m1, newdata, interval = "predict", level = 0.95)
wage.m2 <- lm(log(wage) ~ educ + exper, data)
predicted.logwage <- predict(wage.m2, newdata, interval = "none")
predicted.wage <- mean(exp(wage.m2$residuals)) * exp(predicted.logwage)
summary(bwght.model.search)
wage.m1 <- lm(wage ~ educ + exper, data)
newdata <- data.frame(educ = 12, exper = 8)
predict(wage.m1, newdata, interval = "confidence", level = 0.95)
predict(wage.m1, newdata, interval = "predict", level = 0.95)
wage.m2 <- lm(log(wage) ~ educ + exper, data)
predicted.logwage <- predict(wage.m2, newdata, interval = "none")
predicted.wage <- mean(exp(wage.m2$residuals)) * exp(predicted.logwage)
predicted.wage
predicted.logwage
library(mlbench)
install.packages("mlbench")
library(mlbench)
m <- lm(medv ~ ., data = BostonHousing)
data("BostonHousing")
m <- lm(medv ~ ., data = BostonHousing)
summary(m)
m2 <- step(object = m, direction = 'both')
formula(m2)
wght.model.search <- regsubsets(bwght ~ faminc + fatheduc + motheduc + parity
+ male + white + cigs, data.new, nbest = 3)
summary(wght.model.search)
plot(bwght.model.search, scale = "adjr2") #R2 관점에서 plot으로 볼 때 1variable중 3개의 best보여주고, 2 var 3개 베스트 보여주고, adjusted r square 0.049 r^2에서 모든변수 포함,  (블랙이면 포함됨, 흰색이면 빠짐)
plot(bwght.model.search, scale = "adjr2") #R2 관점에서 plot으로 볼 때 1variable중 3개의 best보여주고, 2 var 3개 베스트 보여주고, adjusted r square 0.049 r^2에서 모든변수 포함,  (블랙이면 포함됨, 흰색이면 빠짐)
plot(bwght.model.search, scale = "bic")#y축은 bic임, each one is rank, lower is better, therefore top one is best, which is moth+party+male+white+cigs임
summary(bwght.model.search)
plot(bwght.model.search, scale = "adjr2") #R2 관점에서 plot으로 볼 때 1variable중 3개의 best보여주고, 2 var 3개 베스트 보여주고, adjusted r square 0.049 r^2에서 모든변수 포함,  (블랙이면 포함됨, 흰색이면 빠짐)
plot(bwght.model.search, scale = "bic")#y축은 bic임, each one is rank, lower is better, therefore top one is best, which is moth+party+male+white+cigs임
m2 <- step(object = m, direction = 'forward')
m2 <- step(object = m, direction = 'backward')
newdata <- data.frame(educ = 12, exper = 8)
predict(wage.m1, newdata, interval = "confidence", level = 0.95) #95% confidence interval fit 4.54 ~ 5.25
predict(wage.m1, newdata, interval = "predict", level = 0.95) #much wider interval,
# set up and load packages -----------------------------------------------------
# clear out working directory
rm(list = ls())
# load packages
library(readr)        # for reading data
library(dplyr)        # for data manipulations
library(magrittr)     # for pipelines
library(minpack.lm)   # for fitting Bass model
library(ggplot2)      # for plotting
library(tidyr)        # for reshaping
# get the data------------------------------------------------------------------
# read in data and set names to lower case
doctor <- read_tsv("../data/doctor.txt")
names(doctor) <- tolower(names(doctor))
# add lagged cumulative sales which we'll need for the formula
doctor %<>% mutate(cs_lag = lag(cumulative_revenues))
doctor[is.na(doctor)] <- 0
# get first 4 periods for predictions
doctor4 <- head(doctor, 4)
# fit the model ----------------------------------------------------------------
# forcast revenues F_t given by     (p+q(C_{t-1}/m)(m-C_{t-1})
# lists for parameters
m_list <- list()
p_list <- list()
q_list <- list()
# loop over 4 week periods and re-fit model
for (i in 1:(nrow(doctor)-3)) {
j <- i+3
dat <- doctor %>% slice(i:j) %>% mutate(cs_lag = lag(cumulative_revenues))
dat[is.na(dat)] <- 0
fit <- nlsLM(formula = revenues ~ (p + q * (cs_lag/m))*(m - cs_lag),
data = dat,
start = list(m = 1, p = 1, q = 1))
m_list[i] <- coef(fit)[1]
p_list[i] <- coef(fit)[2]
q_list[i] <- coef(fit)[3]
#print(c(m, p , q))
}
# get the fitted parameters for first four weeks
m <- m_list[1] %>% as.numeric()
p <- p_list[1] %>% as.numeric()
q <- q_list[1] %>% as.numeric()
# forcasted revenues in the whole data set -------------------------------------
# add empty field to fill
doctor$Prediction <- 0
# add custom function to return prediction
pred <- function(prev_pred, m, p, q){
ans <- (p + q * (prev_pred / m)) * (m - prev_pred)
return(ans)
}
# estimate on full data
for (i in 1:nrow(doctor)) {
if (i == 1) {
prev_pred <- 0
doctor[i, "Prediction"] <- pred(prev_pred, m, p, q)
} else {
prev_pred <- as.numeric(unlist(cumsum(doctor[1:i, "Prediction"])))[i-1]
doctor[i, "Prediction"] <- pred(prev_pred, m, p, q)
}
}
# make some plots --------------------------------------------------------------
# just the first four periods
forecast <-   doctor %>%
slice(1:4) %>%
select(1, 2, 5) %>%
rename(Actual = revenues) %>%
gather(key = type, value = rev, Actual, Prediction) %>%
ggplot(aes(x = week, y = rev, colour = type)) +
geom_line() +
geom_point(aes(shape = type)) +
scale_x_continuous(breaks = seq(from = 0, to =  12, by = 1)) +
scale_y_continuous(breaks = seq(from = 0, to =  10, by = 1)) +
labs(x = "Week", y = "Revenue ($m)") +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank())
library(RPostgreSQL)
password <- .rs.askForPassword("Your database password.")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "nutrients",
host = "localhost", port = 5432,
user = "postgres", password = password)
library(RPostgreSQL)
password <- .rs.askForPassword("Your database password.")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "Nutrition",
host = "localhost", port = 5432,
user = "postgres", password = password)
remove(password)
setwd("~/2ndSemster/Econometrics/lec4")
#### Functional form misspecifation
library(lmtest)
